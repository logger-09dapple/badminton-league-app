# Badminton League App - Comprehensive Usage Guide

## Quick Start Guide

### Prerequisites
- Node.js 18 or higher installed on your system
- npm package manager
- A Supabase account for database hosting
- Git for repository management

### Installation Steps

1. **Clone the Repository**
   ```bash
   git clone https://github.com/logger-09dapple/badminton-league-app.git
   cd badminton-league-app
   ```

2. **Install Dependencies**
   ```bash
   npm install
   ```

3. **Set Up Environment Variables**
   Create a `.env` file in the root directory:
   ```
   VITE_SUPABASE_URL=your_supabase_project_url
   VITE_SUPABASE_ANON_KEY=your_supabase_anon_key
   ```

4. **Start Development Server**
   ```bash
   npm run dev
   ```
   The app will be available at `http://localhost:5173`

5. **Build for Production**
   ```bash
   npm run build
   ```

## Key Features Overview

### Player Management
- **Add Players**: Create player profiles with names, skill levels, and contact information
- **Skill Categorization**: Assign players to Beginner, Intermediate, or Advanced levels
- **Search & Filter**: Quickly find players by name or skill level
- **Player Statistics**: Track individual performance metrics and Elo ratings

### Team Management
- **Team Creation**: Form teams with balanced skill levels
- **Mixed Doubles Support**: Special support for mixed gender teams
- **Team Statistics**: Monitor team performance and win/loss records
- **Dynamic Team Formation**: Easily modify team compositions

### Match Scheduling & Management
- **Match Scheduling**: Set up matches with specific dates and times
- **Score Tracking**: Record match results with detailed scoring
- **Match Filtering**: Filter matches by players, status, or date
- **Real-time Updates**: Live score updates during matches

### Tournament & League Management
- **Dashboard Overview**: Get a quick snapshot of recent matches and statistics
- **Elo Rating System**: Advanced player ranking based on match performance
- **League Standings**: Automatic calculation of league positions
- **Statistical Analysis**: Comprehensive reporting and analytics

## Detailed Usage Tips

### 1. Setting Up Your First League

**Step 1: Add Players**
- Navigate to the Players page
- Click "Add Player" button
- Fill in player details including:
  - Full name
  - Skill level (crucial for balanced matches)
  - Contact information
  - Gender (important for mixed doubles)

**Pro Tip**: Be accurate with skill levels. This ensures competitive and enjoyable matches for all participants.

**Step 2: Create Teams**
- Go to the Teams page
- Use "Add Team" to create new teams
- Mix players of different skill levels for balanced competition
- Consider creating multiple team configurations for variety

**Step 3: Schedule Matches**
- Use the Matches page to schedule games
- Set realistic dates and times
- Assign courts if you have multiple playing areas
- Send notifications to players about upcoming matches

### 2. Managing Matches Effectively

**Before the Match:**
- Confirm player availability
- Check court bookings
- Prepare scoring equipment (or use mobile devices)

**During the Match:**
- Use the app's scoring feature for real-time updates
- Record detailed scores (games, points)
- Note any special circumstances

**After the Match:**
- Update final scores immediately
- Check Elo rating changes
- Plan follow-up matches based on results

### 3. Understanding the Elo Rating System

The app uses an Elo rating system similar to chess rankings:

- **Starting Rating**: New players typically start at 1500
- **Rating Changes**: Depend on opponent strength and match outcome
- **Beating Stronger Players**: Gains more rating points
- **Losing to Weaker Players**: Loses more rating points
- **Balanced Matches**: Smaller rating changes

**Tips for Elo Management:**
- Encourage players to play against varied skill levels
- Don't focus solely on ratings - prioritize fun and improvement
- Use ratings to create balanced tournaments

### 4. Tournament Organization

**Planning Phase:**
- Determine tournament format (round-robin, knockout, etc.)
- Set entry requirements and skill divisions
- Schedule matches across available time slots
- Prepare prizes and recognition for winners

**Execution Phase:**
- Use the app's filtering features to track tournament matches
- Update scores promptly to maintain accurate standings
- Communicate regularly with participants
- Handle scheduling conflicts quickly

**Post-Tournament:**
- Review statistics and player performance
- Gather feedback for improvement
- Plan the next tournament based on learnings

### 5. Administrative Best Practices

**Data Management:**
- Regularly backup player and match data
- Export statistics for external analysis
- Keep player contact information updated
- Archive completed tournaments

**Security:**
- Use admin password protection for sensitive operations
- Be cautious with bulk deletion features
- Limit admin access to trusted individuals
- Regularly update Supabase security settings

**Communication:**
- Keep players informed about schedule changes
- Share tournament results and statistics
- Gather feedback regularly
- Maintain active communication channels

## Troubleshooting Common Issues

### App Won't Start
- **Issue**: Application fails to load
- **Solutions**: 
  - Check Node.js version (18+ required)
  - Run `npm install` to ensure dependencies are installed
  - Verify environment variables are set correctly

### Database Connection Problems
- **Issue**: Cannot connect to Supabase database
- **Solutions**:
  - Verify Supabase project is active
  - Check environment variables in `.env` file
  - Ensure Row Level Security policies are configured
  - Test network connectivity

### Player Data Not Saving
- **Issue**: Player information doesn't persist
- **Solutions**:
  - Check Supabase table permissions
  - Verify RLS policies allow insert/update operations
  - Ensure all required fields are filled
  - Test with simplified data first

### Matches Not Updating
- **Issue**: Match results don't reflect in the app
- **Solutions**:
  - Confirm match completion status
  - Check score entry format
  - Verify database table relationships
  - Test real-time sync settings

### Elo Ratings Not Calculating
- **Issue**: Player ratings remain unchanged after matches
- **Solutions**:
  - Ensure match results are properly recorded
  - Check that both players have initial ratings
  - Verify Elo calculation logic in the code
  - Test with simple match scenarios

## Advanced Features

### Mobile Optimization
- The app is responsive and works well on mobile devices
- Perfect for courtside score updates and match management
- Touch-friendly interface for quick data entry

### Data Export
- Export player statistics to CSV
- Generate tournament reports
- Backup match history for analysis

### Customization Options
- Modify scoring systems if needed
- Adjust Elo rating parameters
- Customize team formation rules
- Add custom fields for players

## Support and Community

### Getting Help
- Check the GitHub repository for issues and discussions
- Consult the official documentation
- Join badminton league management communities
- Contact the app developers for technical support

### Contributing
- Report bugs through GitHub issues
- Suggest new features
- Submit pull requests for improvements
- Share your league management experiences

## Conclusion

This badminton league app provides a comprehensive solution for managing players, teams, matches, and tournaments. By following this guide and implementing the suggested best practices, you'll be able to create an engaging and well-organized badminton league that players will enjoy participating in.

Remember that the key to successful league management is consistent communication, fair play, and continuous improvement based on participant feedback. The app provides the tools, but your leadership and organization skills will make the league truly successful.

Happy playing and good luck with your badminton league!
